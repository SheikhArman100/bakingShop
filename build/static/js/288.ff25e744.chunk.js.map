{"version":3,"file":"static/js/288.ff25e744.chunk.js","mappings":"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","sources":["../node_modules/cookie/index.js","../node_modules/universal-cookie/es6/utils.js","../node_modules/universal-cookie/es6/Cookies.js","../node_modules/react-cookie/es6/Cookies.js","../node_modules/react-cookie/es6/CookiesContext.js","../node_modules/react-cookie/es6/useCookies.js","../node_modules/react-cookie/es6/utils.js"],"sourcesContent":["/*!\n * cookie\n * Copyright(c) 2012-2014 Roman Shtylman\n * Copyright(c) 2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict';\n\n/**\n * Module exports.\n * @public\n */\n\nexports.parse = parse;\nexports.serialize = serialize;\n\n/**\n * Module variables.\n * @private\n */\n\nvar decode = decodeURIComponent;\nvar encode = encodeURIComponent;\n\n/**\n * RegExp to match field-content in RFC 7230 sec 3.2\n *\n * field-content = field-vchar [ 1*( SP / HTAB ) field-vchar ]\n * field-vchar   = VCHAR / obs-text\n * obs-text      = %x80-FF\n */\n\nvar fieldContentRegExp = /^[\\u0009\\u0020-\\u007e\\u0080-\\u00ff]+$/;\n\n/**\n * Parse a cookie header.\n *\n * Parse the given cookie header string into an object\n * The object has the various cookies as keys(names) => values\n *\n * @param {string} str\n * @param {object} [options]\n * @return {object}\n * @public\n */\n\nfunction parse(str, options) {\n  if (typeof str !== 'string') {\n    throw new TypeError('argument str must be a string');\n  }\n\n  var obj = {}\n  var opt = options || {};\n  var pairs = str.split(';')\n  var dec = opt.decode || decode;\n\n  for (var i = 0; i < pairs.length; i++) {\n    var pair = pairs[i];\n    var index = pair.indexOf('=')\n\n    // skip things that don't look like key=value\n    if (index < 0) {\n      continue;\n    }\n\n    var key = pair.substring(0, index).trim()\n\n    // only assign once\n    if (undefined == obj[key]) {\n      var val = pair.substring(index + 1, pair.length).trim()\n\n      // quoted values\n      if (val[0] === '\"') {\n        val = val.slice(1, -1)\n      }\n\n      obj[key] = tryDecode(val, dec);\n    }\n  }\n\n  return obj;\n}\n\n/**\n * Serialize data into a cookie header.\n *\n * Serialize the a name value pair into a cookie string suitable for\n * http headers. An optional options object specified cookie parameters.\n *\n * serialize('foo', 'bar', { httpOnly: true })\n *   => \"foo=bar; httpOnly\"\n *\n * @param {string} name\n * @param {string} val\n * @param {object} [options]\n * @return {string}\n * @public\n */\n\nfunction serialize(name, val, options) {\n  var opt = options || {};\n  var enc = opt.encode || encode;\n\n  if (typeof enc !== 'function') {\n    throw new TypeError('option encode is invalid');\n  }\n\n  if (!fieldContentRegExp.test(name)) {\n    throw new TypeError('argument name is invalid');\n  }\n\n  var value = enc(val);\n\n  if (value && !fieldContentRegExp.test(value)) {\n    throw new TypeError('argument val is invalid');\n  }\n\n  var str = name + '=' + value;\n\n  if (null != opt.maxAge) {\n    var maxAge = opt.maxAge - 0;\n\n    if (isNaN(maxAge) || !isFinite(maxAge)) {\n      throw new TypeError('option maxAge is invalid')\n    }\n\n    str += '; Max-Age=' + Math.floor(maxAge);\n  }\n\n  if (opt.domain) {\n    if (!fieldContentRegExp.test(opt.domain)) {\n      throw new TypeError('option domain is invalid');\n    }\n\n    str += '; Domain=' + opt.domain;\n  }\n\n  if (opt.path) {\n    if (!fieldContentRegExp.test(opt.path)) {\n      throw new TypeError('option path is invalid');\n    }\n\n    str += '; Path=' + opt.path;\n  }\n\n  if (opt.expires) {\n    if (typeof opt.expires.toUTCString !== 'function') {\n      throw new TypeError('option expires is invalid');\n    }\n\n    str += '; Expires=' + opt.expires.toUTCString();\n  }\n\n  if (opt.httpOnly) {\n    str += '; HttpOnly';\n  }\n\n  if (opt.secure) {\n    str += '; Secure';\n  }\n\n  if (opt.sameSite) {\n    var sameSite = typeof opt.sameSite === 'string'\n      ? opt.sameSite.toLowerCase() : opt.sameSite;\n\n    switch (sameSite) {\n      case true:\n        str += '; SameSite=Strict';\n        break;\n      case 'lax':\n        str += '; SameSite=Lax';\n        break;\n      case 'strict':\n        str += '; SameSite=Strict';\n        break;\n      case 'none':\n        str += '; SameSite=None';\n        break;\n      default:\n        throw new TypeError('option sameSite is invalid');\n    }\n  }\n\n  return str;\n}\n\n/**\n * Try decoding a string using a decoding function.\n *\n * @param {string} str\n * @param {function} decode\n * @private\n */\n\nfunction tryDecode(str, decode) {\n  try {\n    return decode(str);\n  } catch (e) {\n    return str;\n  }\n}\n","import * as cookie from 'cookie';\r\nexport function hasDocumentCookie() {\r\n    // Can we get/set cookies on document.cookie?\r\n    return typeof document === 'object' && typeof document.cookie === 'string';\r\n}\r\nexport function cleanCookies() {\r\n    document.cookie.split(';').forEach(function (c) {\r\n        document.cookie = c\r\n            .replace(/^ +/, '')\r\n            .replace(/=.*/, '=;expires=' + new Date().toUTCString() + ';path=/');\r\n    });\r\n}\r\nexport function parseCookies(cookies, options) {\r\n    if (typeof cookies === 'string') {\r\n        return cookie.parse(cookies, options);\r\n    }\r\n    else if (typeof cookies === 'object' && cookies !== null) {\r\n        return cookies;\r\n    }\r\n    else {\r\n        return {};\r\n    }\r\n}\r\nexport function isParsingCookie(value, doNotParse) {\r\n    if (typeof doNotParse === 'undefined') {\r\n        // We guess if the cookie start with { or [, it has been serialized\r\n        doNotParse =\r\n            !value || (value[0] !== '{' && value[0] !== '[' && value[0] !== '\"');\r\n    }\r\n    return !doNotParse;\r\n}\r\nexport function readCookie(value, options) {\r\n    if (options === void 0) { options = {}; }\r\n    var cleanValue = cleanupCookieValue(value);\r\n    if (isParsingCookie(cleanValue, options.doNotParse)) {\r\n        try {\r\n            return JSON.parse(cleanValue);\r\n        }\r\n        catch (e) {\r\n            // At least we tried\r\n        }\r\n    }\r\n    // Ignore clean value if we failed the deserialization\r\n    // It is not relevant anymore to trim those values\r\n    return value;\r\n}\r\nfunction cleanupCookieValue(value) {\r\n    // express prepend j: before serializing a cookie\r\n    if (value && value[0] === 'j' && value[1] === ':') {\r\n        return value.substr(2);\r\n    }\r\n    return value;\r\n}\r\n","var __assign = (this && this.__assign) || function () {\r\n    __assign = Object.assign || function(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\r\n                t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n    return __assign.apply(this, arguments);\r\n};\r\nimport * as cookie from 'cookie';\r\nimport { hasDocumentCookie, parseCookies, readCookie } from './utils';\r\nvar Cookies = /** @class */ (function () {\r\n    function Cookies(cookies, options) {\r\n        var _this = this;\r\n        this.changeListeners = [];\r\n        this.HAS_DOCUMENT_COOKIE = false;\r\n        this.cookies = parseCookies(cookies, options);\r\n        new Promise(function () {\r\n            _this.HAS_DOCUMENT_COOKIE = hasDocumentCookie();\r\n        }).catch(function () { });\r\n    }\r\n    Cookies.prototype._updateBrowserValues = function (parseOptions) {\r\n        if (!this.HAS_DOCUMENT_COOKIE) {\r\n            return;\r\n        }\r\n        this.cookies = cookie.parse(document.cookie, parseOptions);\r\n    };\r\n    Cookies.prototype._emitChange = function (params) {\r\n        for (var i = 0; i < this.changeListeners.length; ++i) {\r\n            this.changeListeners[i](params);\r\n        }\r\n    };\r\n    Cookies.prototype.get = function (name, options, parseOptions) {\r\n        if (options === void 0) { options = {}; }\r\n        this._updateBrowserValues(parseOptions);\r\n        return readCookie(this.cookies[name], options);\r\n    };\r\n    Cookies.prototype.getAll = function (options, parseOptions) {\r\n        if (options === void 0) { options = {}; }\r\n        this._updateBrowserValues(parseOptions);\r\n        var result = {};\r\n        for (var name_1 in this.cookies) {\r\n            result[name_1] = readCookie(this.cookies[name_1], options);\r\n        }\r\n        return result;\r\n    };\r\n    Cookies.prototype.set = function (name, value, options) {\r\n        var _a;\r\n        if (typeof value === 'object') {\r\n            value = JSON.stringify(value);\r\n        }\r\n        this.cookies = __assign(__assign({}, this.cookies), (_a = {}, _a[name] = value, _a));\r\n        if (this.HAS_DOCUMENT_COOKIE) {\r\n            document.cookie = cookie.serialize(name, value, options);\r\n        }\r\n        this._emitChange({ name: name, value: value, options: options });\r\n    };\r\n    Cookies.prototype.remove = function (name, options) {\r\n        var finalOptions = (options = __assign(__assign({}, options), { expires: new Date(1970, 1, 1, 0, 0, 1), maxAge: 0 }));\r\n        this.cookies = __assign({}, this.cookies);\r\n        delete this.cookies[name];\r\n        if (this.HAS_DOCUMENT_COOKIE) {\r\n            document.cookie = cookie.serialize(name, '', finalOptions);\r\n        }\r\n        this._emitChange({ name: name, value: undefined, options: options });\r\n    };\r\n    Cookies.prototype.addChangeListener = function (callback) {\r\n        this.changeListeners.push(callback);\r\n    };\r\n    Cookies.prototype.removeChangeListener = function (callback) {\r\n        var idx = this.changeListeners.indexOf(callback);\r\n        if (idx >= 0) {\r\n            this.changeListeners.splice(idx, 1);\r\n        }\r\n    };\r\n    return Cookies;\r\n}());\r\nexport default Cookies;\r\n","import Cookies from 'universal-cookie';\r\nexport default Cookies;\r\n","import * as React from 'react';\r\nimport Cookies from './Cookies';\r\nvar CookiesContext = React.createContext(new Cookies());\r\nexport var Provider = CookiesContext.Provider, Consumer = CookiesContext.Consumer;\r\nexport default CookiesContext;\r\n","import { useContext, useLayoutEffect, useState, useRef, useMemo } from 'react';\r\nimport CookiesContext from './CookiesContext';\r\nimport { isInBrowser } from './utils';\r\nexport default function useCookies(dependencies) {\r\n    var cookies = useContext(CookiesContext);\r\n    if (!cookies) {\r\n        throw new Error('Missing <CookiesProvider>');\r\n    }\r\n    var initialCookies = cookies.getAll();\r\n    var _a = useState(initialCookies), allCookies = _a[0], setCookies = _a[1];\r\n    var previousCookiesRef = useRef(allCookies);\r\n    if (isInBrowser()) {\r\n        useLayoutEffect(function () {\r\n            function onChange() {\r\n                var newCookies = cookies.getAll();\r\n                if (shouldUpdate(dependencies || null, newCookies, previousCookiesRef.current)) {\r\n                    setCookies(newCookies);\r\n                }\r\n                previousCookiesRef.current = newCookies;\r\n            }\r\n            cookies.addChangeListener(onChange);\r\n            return function () {\r\n                cookies.removeChangeListener(onChange);\r\n            };\r\n        }, [cookies]);\r\n    }\r\n    var setCookie = useMemo(function () { return cookies.set.bind(cookies); }, [cookies]);\r\n    var removeCookie = useMemo(function () { return cookies.remove.bind(cookies); }, [cookies]);\r\n    return [allCookies, setCookie, removeCookie];\r\n}\r\nfunction shouldUpdate(dependencies, newCookies, oldCookies) {\r\n    if (!dependencies) {\r\n        return true;\r\n    }\r\n    for (var _i = 0, dependencies_1 = dependencies; _i < dependencies_1.length; _i++) {\r\n        var dependency = dependencies_1[_i];\r\n        if (newCookies[dependency] !== oldCookies[dependency]) {\r\n            return true;\r\n        }\r\n    }\r\n    return false;\r\n}\r\n","export function isInBrowser() {\r\n    return (typeof window !== 'undefined' &&\r\n        typeof window.document !== 'undefined' &&\r\n        typeof window.document.createElement !== 'undefined');\r\n}\r\n"],"names":["exports","str","options","TypeError","obj","opt","pairs","split","dec","decode","i","length","pair","index","indexOf","key","substring","trim","undefined","val","slice","tryDecode","name","enc","encode","fieldContentRegExp","test","value","maxAge","isNaN","isFinite","Math","floor","domain","path","expires","toUTCString","httpOnly","secure","sameSite","toLowerCase","decodeURIComponent","encodeURIComponent","e","readCookie","cleanValue","substr","cleanupCookieValue","doNotParse","isParsingCookie","JSON","parse","__assign","Object","assign","t","s","n","arguments","p","prototype","hasOwnProperty","call","apply","this","Cookies","cookies","_this","changeListeners","HAS_DOCUMENT_COOKIE","cookie","parseCookies","Promise","document","catch","_updateBrowserValues","parseOptions","_emitChange","params","get","getAll","result","name_1","set","_a","stringify","remove","finalOptions","Date","addChangeListener","callback","push","removeChangeListener","idx","splice","CookiesContext","React","Provider","Consumer","useCookies","dependencies","useContext","Error","initialCookies","useState","allCookies","setCookies","previousCookiesRef","useRef","window","createElement","useLayoutEffect","onChange","newCookies","oldCookies","_i","dependencies_1","dependency","shouldUpdate","current","useMemo","bind"],"sourceRoot":""}